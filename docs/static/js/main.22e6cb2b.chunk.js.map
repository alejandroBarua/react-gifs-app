{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/Gif.js","components/GifGrid.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","query","urlSearch","fetch","res","json","data","gifs","map","id","title","images","url","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","Gif","titleShort","slice","className","src","alt","GifGrid","image","App","class","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAcxC,OACC,sBAAMC,SATc,SAAAC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,YAAY,iBACZC,MAAOV,EACPW,SAhBsB,SAAAR,GAAC,OAAIF,EAAcE,EAAES,OAAOF,a,uCCNzCG,EAAO,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,4DAET,mCACH,EACRC,EAAQF,EAEHG,EANe,uDAET,mCAFS,cAMsDD,EANtD,kBAGZ,GAHY,SAOHE,MAAMD,GAPH,cAOfE,EAPe,gBAQAA,EAAIC,OARJ,uBAQdC,EARc,EAQdA,KAEDC,EAAOD,EAAKE,KAAI,YAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAClC,MAAO,CACNF,KACAC,QACAE,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAQE,iBAAiBD,QAdX,kBAkBdL,GAlBc,4CAAH,sDCqBLO,EAlBM,SAACf,GAAc,IAAD,EAERf,mBAAS,CAClCsB,KAAM,GACNS,SAAS,IAJwB,mBAE3BC,EAF2B,KAEpBC,EAFoB,KAclC,OAPAC,qBAAU,WAETpB,EAAQC,GACNoB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAAEX,KAAMc,EAAML,SAAS,SAE9C,CAAChB,IAEIiB,GCJOK,EAZH,SAAC,GAAkB,IAAjBX,EAAgB,EAAhBA,MAAOE,EAAS,EAATA,IAEdU,EAAaZ,EAAMa,MAAM,EAAE,IAAM,MAEvC,OACC,sBAAKC,UAAU,yCAAf,UACC,4BAAIF,IACJ,qBAAKG,IAAKb,EAAKc,IAAKhB,EAAOA,MAAOA,QCetBiB,EApBC,SAAC,GAAgB,IAAf5B,EAAc,EAAdA,SAAc,EAEEe,EAAaf,GAAhCY,EAFiB,EAExBL,KAAeS,EAFS,EAETA,QAEtB,OACC,qCACC,oBAAIS,UAAU,iBAAd,SAAgCzB,IAE/BgB,GAAW,oBAAIS,UAAU,mCAAd,wBAGZ,qBAAKA,UAAU,YAAf,SAEEb,EAAOH,KAAI,gBAAEC,EAAF,EAAEA,GAAOmB,EAAT,6BAAoB,cAAC,EAAD,eAAkBA,GAARnB,YCyB/BoB,EApCH,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAAY,EAEU1B,mBAAS,CAAC,iBAAkB,oBAFtC,mBAEnBQ,EAFmB,KAEPT,EAFO,KAM1B,OAEC,qCACA,iCACC,sBAAK+C,MAAM,YAAX,UACC,6BAAKpB,IACL,cAAC,EAAD,CACC3B,cAAeA,SAMjB,qBAAK+C,MAAM,YAAX,SACC,6BAEEtC,EAAWgB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,cCrBzCgC,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAQ,cAAC,EAAD,CAAKzB,MAAM,aAAcqB,K","file":"static/js/main.22e6cb2b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputValue = e => setInputValue(e.target.value);\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tif(inputValue.trim().length > 2){\n\t\t\tsetCategories(categories => [inputValue, ...categories]);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input \n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Search Gifs...\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputValue}\n\t\t\t/>\n\t\t</form>\n\t)\n}\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired \n}\n\nexport default AddCategory;","\nexport const getGifs = async(category) => {\n\n\t\tconst key = \"V8omOgT6Vnz2D5hOS5QVQaBkEYtU2xOf\",\n\t\t\tlimit = 3,\n\t\t\tquery = category;\n\t\t\t\n\t\tconst urlSearch = `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${query}&limit=${limit}`;\n\t\tconst res = await fetch(urlSearch);\n\t\tconst {data} = await res.json();\n\n\t\tconst gifs = data.map(({id, title, images}) => {\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\ttitle,\n\t\t\t\turl: images?.downsized_medium.url\n\t\t\t}\n\t\t})\n\n\t\treturn gifs;\n\t}","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nconst useFetchGifs = (category) => {\n\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\n\tuseEffect(() => {\n\n\t\tgetGifs(category)\n\t\t\t.then(imgs => setState({ data: imgs, loading: false }));\n\n\t},[category]) // solo se renderiza el componente cuando el valor de category cambie\n\n\treturn state;\n}\n\n\nexport default useFetchGifs;","import React from 'react'\n\nconst Gif = ({title, url}) => {\n\n\tconst titleShort = title.slice(0,25) + \"...\";\n\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<p>{titleShort}</p>\n\t\t\t<img src={url} alt={title} title={title} />\n\t\t</div>\n\t)\n}\n\nexport default Gif;","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport Gif from \"./Gif\";\n\nconst GifGrid = ({category}) => {\n\n\tconst {data : images, loading} = useFetchGifs(category);\n\t\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"title-category\">{category}</h2>\n\n\t\t\t{loading && <h3 className=\"animate__animated animate__flash\">Loading...</h3> } \n\t\t\t{/* // loading ? <h3>Loading...</h3> : null */}\n\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{\n\t\t\t\t\timages.map(({id, ...image}) => <Gif key={id} {...image} />)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default GifGrid;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst App = ({ title }) => {\n\n\tconst [categories, setCategories] = useState(['Rick and Morty', 'Game of Thrones']);\n\n\t//const handleAdd = () => setCategories(['Dragon Ball', ...categories]);\n\t\n\treturn (\n\n\t\t<> \n\t\t<header>\n\t\t\t<div class=\"container\">\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<AddCategory \n\t\t\t\t\tsetCategories={setCategories} \n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t</header>\n\t\t\t{/* <button onClick={handleAdd}>Add</button> */}\n\t\t\t<div class=\"container\">\n\t\t\t\t<ol>\n\t\t\t\t\t{\n\t\t\t\t\t\tcategories.map(category => <GifGrid key={category} category={category} />)\n\t\t\t\t\t}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</>\n\n\t);\n} \n\nApp.propTypes = {\n\ttitle: PropTypes.string.isRequired \n}\n\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App'\n\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <App title=\"Gifs App\"/>, divRoot);"],"sourceRoot":""}